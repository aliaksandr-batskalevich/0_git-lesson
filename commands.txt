Настройка Git 
- для всех проектов
git config --global user.name ”Aliaksandr-Batskalevich”
git config --global user.email aliaksandr.batskalevich@gmail.com

- для конкретного проекта поменять автора
git config user.name ”Aliaksandr-Batskalevich”
git config user.email aliaksandr.batskalevich@gmail.com
	
	Основные команды
git init	-	создать локальный репозиторий
git status	-	статус работы на данный момент
git log		-	посмотреть на историю коммитов в ветке
git diff	-	посмотреть на изменения файлов в состоянии modified

git add -A	—	добавить все файлы из состояния в staged
git add .	—	добавить все файлы из этой папки и все внутренних (не добавляет сами каталоги)
git add <имя файла> — 	добавляет только конкретный файл (git add *.java)

git commit -m “какой-нибудь комментарий” - закоммитить и создать новый коммит
git commit -a -m “какой-нибудь комментарий” - закоммитить c АВТОМАТИЧЕСКИМ добавлением отслеживаемых файлов
git checkout <ID commit> - просмотр коммита (возвращение через git checkout master)
git revert <ID commit> - отмена коммита (не удаляет!!! - создает новый коммит с отменой какого-либо)
git reset <ID commit> - удаление коммитов, которые идут после ID c сохранением конечного кода
git reset <ID commit> --hard - удаление коммитов, которые идут после ID c возвращением кода указанного коммита

	Работа с .gitignore
*.class		-	игнорирование всех файлов с расширением .class
target/		-	игнорирование папки target и всего, что она содержит
*.iml		-	игнорирование всех файлов с расширением .iml
.idea/		-	игнорирование папки .idea

	Работа с ветками (ветка — это просто подвижный указатель на коммиты)
git branch -a	-	список всех веток в репозитории, посмотреть на какой находишься
git branch <имя ветки> - создание ветки
git checkout -b <название ветки> <идентификатор> - создать ветку на основе конкретного коммита
git checkout -b <название ветки> - создать новую ветку на основе ветки master
git checkout master — переход на ветку master
git merge <название ветки> - смерджить  ветку <название ветки> в master (команда из master)
git branch -D <название ветки> - 	ить ветку <название ветки>

:wq		-	выход из редактора win


Состояния Git:
неотслеживаемое (untracked);
измененное (modified);
подготовленное (staged);
закомиченное (committed).